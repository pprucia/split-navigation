defaults: &defaults
  working_directory: ~/workspace
  docker:
    - image: circleci/android:api-28-alpha
  environment:
    JVM_OPTS: -Xmx3200m


version: 2
jobs:
  checkout_code:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - persist_to_workspace:
          root: .
          paths:
            - .

  cache_dependencies:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/workspace
      - restore_cache:
          key: deps-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Downloading dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: deps-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

  code_check:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/workspace
      - restore_cache:
          key: deps-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Performing static analysis
          command: ./gradlew lint
      - store_artifacts:
          path: app/build/reports
          destination: reports/code_check
      - save_cache:
          paths:
            - ~/.gradle
          key: deps-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}


  build_debug:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/workspace
      - restore_cache:
          key: deps-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Build debug apk
          command: ./gradlew assembleDebug
      - persist_to_workspace:
          root: .
          paths:
            - build/
            - app/build/


  test_debug:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/workspace
      - restore_cache:
          key: deps-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Unit test application
          command: ./gradlew testDebugUnitTest
      - store_test_results:
          path: app/build/reports/tests/testDebugUnitTest
      - store_artifacts:
          path: app/build/reports/tests/testDebugUnitTest
          destination: reports/tests/unit/debug


  build_snapshot:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/workspace
      - restore_cache:
          key: deps-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Build debug apk
          command: ./gradlew assembleSnapshot
      - run:
          name: Rename snapshot artifacts
          command: |
            cd app/build/outputs/apk/snapshot/
            mv app-snapshot.apk split-navigation-${CIRCLE_BUILD_NUM}_${CIRCLE_SHA1}.apk
            mv output.json output-${CIRCLE_SHA1}.json
      - persist_to_workspace:
          root: .
          paths:
            - build/
            - app/build/


  deploy_snapshot:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/workspace
      - store_artifacts:
          path: app/build/outputs/apk/snapshot/
          destination: artifacts/snapshot
      # todo publish to google play internal / fabric / ...


  approve:
    <<: *defaults
    steps:
      - run:
          command: echo Done!


workflows:
  version: 2

  # any commit
  build_and_test:
    jobs:
      - checkout_code:
          filters:
            branches:
              ignore: master
      - cache_dependencies:
          requires:
            - checkout_code
      - code_check:
          requires:
            - cache_dependencies
      - build_debug:
          requires:
            - cache_dependencies
      - test_debug:
          requires:
            - build_debug
      - approve:
          requires:
            - code_check
            - test_debug


  # after merge to master
  snapshot:
    jobs:
      - checkout_code:
          filters:
            branches:
              only: master
      - cache_dependencies:
          requires:
            - checkout_code
      - code_check:
          requires:
            - cache_dependencies
      - build_snapshot:
          requires:
            - cache_dependencies
      # todo: testing
      - deploy_snapshot:
          requires:
            - code_check
            - build_snapshot
      - approve:
          requires:
            - deploy_snapshot


  # todo release
  # only commits market with a release tag
#  release:
#    jobs:
#      - checkout_code:
#          filters:
#            tags:
#              only: /release/*
#      - code_check
#      - build_release
#      - deploy